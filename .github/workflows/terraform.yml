name: Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      env:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
        node_role_arn: ${{ secrets.NODE_ROLE_ARN }}
      run: | 
        terraform plan \ 
        -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
        -var="aws_secret_key=${{ secrets.AWS_SECRET_KEY }}" \
        -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
        -var="node_role_arn=${{ secrets.NODE_ROLE_ARN }}"

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      env:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
        aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}}
        node_role_arn: ${{ secrets.NODE_ROLE_ARN }}
      run: |
        terraform apply -auto-approve \
        -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY }}" \
        -var="aws_secret_key=${{ secrets.AWS_SECRET_KEY }}" \
        -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
        -var="node_role_arn=${{ secrets.NODE_ROLE_ARN }}"